name: Docker Image CI

on:
  workflow_dispatch:  # manual trigger
  schedule:
      # ┌───────────── minute (0 - 59)
      # │ ┌───────────── hour (0 - 23)
      # │ │ ┌───────────── day of the month (1 - 31)
      # │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
      # │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
      # │ │ │ │ │
      # │ │ │ │ │
      # │ │ │ │ │
      # * * * * *
    - cron: '0 0 * * 1'  # build every Monday
  push:
    branches: [ master, dev ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ master ]


jobs:

  build:

    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: mingc/android-build-box

    steps:
    - uses: actions/checkout@v2

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: mingc/android-build-box
        labels: |
          org.opencontainers.image.url=https://hub.docker.com/r/mingc/android-build-box
          org.opencontainers.image.vendor=Ming Chen

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: amd64,arm64

    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Pre build
      run: |
        uname -a
        df -h
        docker images
        docker ps -a
        echo "GITHUB_SHA: $GITHUB_SHA"

        # Remove exist images to free disk space
        docker image prune -a -f
        #docker rmi $(docker images | grep -v IMAGE | awk '{print $3}')
        docker images

        # check disk space one more time
        df -h

    - name: Build local docker image for test
      # if: github.event_name != 'pull_request'
      run: |
        TAG=$GITHUB_SHA
        docker build . \
            --file Dockerfile \
            --tag $IMAGE_NAME:$TAG

    - name: Inspect local docker image
      run: |
        TAG=$GITHUB_SHA
        docker images
        docker inspect $IMAGE_NAME:$TAG

    - name: Test
      run: |
        TAG=$GITHUB_SHA
        docker run --rm $IMAGE_NAME:$TAG env
        docker run --rm $IMAGE_NAME:$TAG flutter --version
        docker run --rm $IMAGE_NAME:$TAG java -version

        docker run -v `pwd`:/project --rm $IMAGE_NAME:$TAG bash -c 'echo "Current directory: $PWD"'

        docker run --rm $IMAGE_NAME:$TAG bash -c 'ls -l $ANDROID_SDK_HOME'
        docker run --rm $IMAGE_NAME:$TAG bash -c 'ls -l $ANDROID_NDK_HOME'
        docker run --rm $IMAGE_NAME:$TAG bash -c 'ls -l /opt/android-sdk/ndk/'

        cd test_projects/SampleProject/
        docker run --rm -v `pwd`:/project $IMAGE_NAME:$TAG bash -c 'cd /project; ./gradlew build'

    - name: Remove local docker image
      run: |
        TAG=$GITHUB_SHA
        docker rmi $IMAGE_NAME:$TAG

    - name: Login to DockerHub
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        # Android SDK not support arm64 yet
        # platforms: linux/amd64,linux/arm64
        platforms: linux/amd64
        # platforms: linux/arm64
        push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
        tags: mingc/android-build-box:latest,${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
